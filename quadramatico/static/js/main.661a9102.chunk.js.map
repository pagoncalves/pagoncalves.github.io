{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["soma_Cores","cor1","cor2","tipo","dirs","tabuleiro","i","j","direcao","linha","coluna","App","props","handleBnt","event","setState","state","quadrados","handleNovoJogo","Math","floor","random","handleTeclado","code","atualizaTabuleiro","quadrados_novos","k","linha_atual","coluna_atual","coluna_nova","linha_nova","cor_atual","cor_nova","cor_soma","cores","document","querySelector","focus","numeros","className","style","backgroundColor","this","push","renderQuadrado","linhas","renderLinha","id","onKeyDown","tabIndex","renderTabuleiro","IconButton","onClick","color","fontSize","Button","variant","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.661a9102.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Button from '@material-ui/core/Button';\n\n//qndo há duas cores e quer somar, cor1 com cor2\nfunction soma_Cores(cor1, cor2) {\n  var tipo = [0, 1, 1, 2, 1, 2, 2]//criada para \n  if (cor1 <= 6 && cor2 <= 6) {\n    if (tipo[cor1] === tipo[cor2] && cor1 !== cor2) {\n      return cor1 | cor2\n    } else {\n      return 0\n    }\n  } else if (cor1 === 7 && cor2 === 7) {\n    return 8\n  } else if (cor1 === 8 && cor2 === 8) {\n    return 9\n  } else if (cor1 === 9 && cor2 === 9) {\n    return 9\n  }\n  else {\n    return 0\n  }\n}//fecha funcao soma_cores\nconst dirs = { CIMA: 0, BAIXO: 1, DIREITA: 2, ESQUERDA: 3 }\nfunction tabuleiro(i, j, direcao) {\n  var linha\n  var coluna\n  switch (direcao) {\n    case dirs.ESQUERDA:\n      linha = i\n      coluna = j\n      break;\n    case dirs.DIREITA:\n      linha = i\n      coluna = 3 - j\n      break;\n    case dirs.CIMA:\n      linha = j\n      coluna = i\n      break;\n    case dirs.BAIXO:\n      linha = 3 - j\n      coluna = i\n      break;\n    default:\n      break;\n  }\n\n  return [linha, coluna]\n}//fim funcao tabuleiro\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cores = [\"white\", \"blue\", \"red\", \"purple\", \"yellow\", \"green\", \"orange\", \"lightgrey\", \"grey\", \"black\"]\n    //estado inicial\n    this.state = {\n      quadrados: [[3, 1, 2, 3], [4, 5, 6, 7], [8, 2, 4, 1], [2, 3, 4, 5]]\n      // quadrados: [[0, 0, 0, 0], [7, 7, 0, 0], [0, 0, 0, 8], [0, 0, 0, 0]]\n    }\n  }\n\n  handleBnt = (event) => {\n    this.setState((state) => {\n      var quadrados = [[3, 1, 2, 3], [4, 5, 6, 7], [8, 2, 4, 1], [2, 3, 4, 5]]\n      return { quadrados }\n    })\n\n  }\n\n  handleNovoJogo = (event) => {\n    var quadrados = [[3, 1, 2, 3], [4, 5, 6, 7], [8, 2, 4, 1], [2, 3, 4, 5]]\n    for (var i = 0; i < 4 ; i++){\n      for (var j = 0;j < 4 ; j++){\n       quadrados[i][j] = Math.floor(Math.random() * 6 ) + 1\n      }\n    }\n    this.setState((state) => {\n     \n      return { quadrados }\n    })\n\n  }\n\n  handleTeclado = (event) => {\n\n    switch (event.code) {\n      case \"ArrowDown\":\n        this.atualizaTabuleiro(dirs.BAIXO)\n        break\n      case \"ArrowUp\":\n        this.atualizaTabuleiro(dirs.CIMA)\n        break\n      case \"ArrowLeft\":\n        this.atualizaTabuleiro(dirs.ESQUERDA)\n        break\n      case \"ArrowRight\":\n        this.atualizaTabuleiro(dirs.DIREITA)\n        break\n      default:\n        break\n    }\n    return\n  }//fim handleTeclado\n\n\n  atualizaTabuleiro = (direcao) => {\n\n    this.setState((state) => {\n      var quadrados_novos = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]\n\n      for (var i = 0; i < 4; i++) {\n        var k = 0\n        for (var j = 0; j < 4; j++) {\n          var linha_atual, coluna_atual, coluna_nova, linha_nova\n          [linha_atual, coluna_atual] = tabuleiro(i, j, direcao);\n          [linha_nova, coluna_nova] = tabuleiro(i, k, direcao)\n\n          var cor_atual = state.quadrados[linha_atual][coluna_atual]\n          var cor_nova = quadrados_novos[linha_nova][coluna_nova]\n          if (cor_atual > 0) {\n            var cor_soma\n            if (cor_nova === 0) {\n              cor_soma = cor_atual\n            } else {\n              k++\n              cor_soma = soma_Cores(cor_atual, cor_nova);\n              if (cor_soma === 0) {\n                cor_soma = cor_atual;\n                [linha_nova, coluna_nova] = tabuleiro(i, k, direcao)\n\n              }\n\n            }\n\n            quadrados_novos[linha_nova][coluna_nova] = cor_soma\n\n          }\n        }\n      }\n      return { quadrados: quadrados_novos }\n    })\n\n\n  }//fim atualiza \n\n\n\n  componentDidMount() {\n    document.querySelector(\".App\").focus()\n  }//para página carregar\n\n  renderQuadrado(i, j, numeros) {\n\n    return (\n      <div className=\"qq\" style={{ backgroundColor: this.cores[this.state.quadrados[i][j]] }}>\n        {numeros && this.state.quadrados[i][j]}\n      </div>\n    )\n  }\n\n  renderLinha(j, numeros) {\n    var quadrados = []\n    for (var i = 0; i < 4; i++) {\n      quadrados.push(this.renderQuadrado(i, j, false))\n    }\n    return (\n      <div className=\"Qdentro\">{quadrados} </div>\n    )\n  }\n\n  renderTabuleiro(numeros) {\n    var linhas = []\n    for (var j = 0; j < 4; j++) {\n      linhas.push(this.renderLinha(j, numeros))\n\n    } return (\n      <div id=\"Quadrado\">{linhas} </div>\n    )\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\" onKeyDown={this.handleTeclado} tabIndex=\"0\">\n        <div id=\"Ajuste\">\n          {this.renderTabuleiro(false)}\n          <section id=\"ctr\">\n            <IconButton onClick={() => this.atualizaTabuleiro(dirs.CIMA)} color=\"primary\" id=\"c\">  <ArrowUpwardIcon fontSize=\"large\" /></IconButton>\n            <IconButton onClick={() => this.atualizaTabuleiro(dirs.ESQUERDA)} color=\"primary\" id=\"e\" >   <ArrowBackIcon fontSize=\"large\" /></IconButton>\n            <IconButton onClick={() => this.atualizaTabuleiro(dirs.DIREITA)} color=\"primary\" id=\"d\">  <ArrowForwardIcon fontSize=\"large\" /></IconButton>\n            <IconButton onClick={() => this.atualizaTabuleiro(dirs.BAIXO)} color=\"primary\" id=\"b\">  <ArrowDownwardIcon fontSize=\"large\" /></IconButton>\n          </section>\n          <section className=\"btn\"> \n            <Button onClick={this.handleBnt}  variant=\"contained\">Reiniciar</Button>\n            <Button onClick={this.handleNovoJogo}  variant=\"contained\">Novo Jogo</Button>\n          </section>       \n        </div>\n        <div>\n\n          <section>\n            <p>Bem vindo!</p>\n\n            <p>Oiii, muito bom te ver por aqui. Este é o jogo \"Resta uma cor\".</p>\n            <p>Tem regrinha hein! </p>\n            <p>\n              Fica tranquilo(a) é bem fácil de entender:\n            <p>Cores Primárias: Vermelho, Azul e Amarelo podem se juntar para obter cores secundárias;</p>\n              <p> Cores Secundárias: Roxo, Verde e Laranja também podem ser juntadas para obter cinza claro;</p>\n              <p>Cinza claro: Junte 2 cinza claros para obter o cinza escuro; </p>\n              <p>Cinza escuro: Junto 2 cinza escuros para obter o preto; </p>\n              <p>Preto: Junte os pretos para finalizar o jogo. </p>\n            </p>\n\n            <p>Ah! Se liga na dica: </p>\n            <p> As únicas cores iguais que se juntam são cinza claro, cinza escuro e preto. </p>\n\n          </section>\n\n        </div>\n      </div>//fim div app \n\n    );\n  }\n}\n\n\nexport default App;\n//incluir um botão de reiniciar - ok\n//iniciar o jogo sem precisar clicar - ok\n//instruções - ok\n//trocar teclado por botão\n//incluir níveis\n//gerar inicio aleatório para niveis de dificuldade","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}